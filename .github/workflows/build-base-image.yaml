name: "Build OCI: arctux/base:latest"

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * *"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (base)
        id: base-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/base
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Build and push Docker image (base)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./os/base/Dockerfile
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.base-meta.outputs.tags }}
          labels: ${{ steps.base-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract Docker metadata (base-devel)
        id: base-devel-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/base
          tags: |
            type=raw,value=devel,enable={{is_default_branch}}
            type=schedule,pattern=devel-{{date 'YYYYMMDD'}}

      - name: Build and push Docker image (base-devel)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./os/base-devel/Dockerfile
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.base-devel-meta.outputs.tags }}
          labels: ${{ steps.base-devel-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
