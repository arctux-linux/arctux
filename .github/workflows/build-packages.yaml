name: "Build packages"
on: workflow_dispatch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: ${{ github.repository }}/pkg

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        package:
          - arctux-keyring
          - uboot-cm3588-nas
          - uboot-radxa-zero-3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract package info metadata
        id: pkg-meta
        run: |
          cd "./packages/${{ matrix.package }}"
          pkgver=$(awk '/^\s*pkgver\s*=/ { print $3 }' .SRCINFO)
          pkgrel=$(awk '/^\s*pkgrel\s*=/ { print $3 }' .SRCINFO)
          arch=$(awk '/^\s*arch\s*=/ { print $3 }' .SRCINFO)
          version="${pkgver}-${pkgrel}"
          package="${{ matrix.package }}-${version}-${arch}.pkg.tar.xz"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "arch=${arch}" >> "$GITHUB_OUTPUT"
          echo "package=${package}" >> "$GITHUB_OUTPUT"

      - name: Extract Docker metadata
        id: image-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/${{ matrix.package }}
          tags: |
            type=raw,value=${{ steps.pkg-meta.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./packages/${{ matrix.package }}
          file: ./packages/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ steps.image-meta.outputs.tags }}
          labels: ${{ steps.image-meta.outputs.labels }}
          outputs: "type=local,dest=./packages/${{ matrix.package }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Add package to repository
        uses: ./.github/actions/add-pkg-to-repo
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          RCLONE_CONFIG_SECRET: ${{ secrets.RCLONE_CONFIG }}
        with:
          repository: "arctux"
          package: /github/workspace/packages/${{ matrix.package }}/${{ steps.pkg-meta.outputs.package }}
          rclone-bucket: ${{ secrets.RCLONE_BUCKET }}
